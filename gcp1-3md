Google Cloud 기초: Cloud Storage 및 Cloud SQL 시작하기
50분
크레딧 1개
개요
이 실습에서는 Cloud Storage 버킷을 만들고 그 안에 이미지를 배치합니다. 또한 Cloud SQL에서 관리하는 데이터베이스를 사용하도록 Compute Engine에서 실행되는 애플리케이션을 구성합니다. 이 실습에서는 PHP로 웹 서버를 구성하는데 이는 가장 선호되는 블로그 소프트웨어의 기반인 웹 개발 환경입니다. 실습이 아닌 실제 사용 시에는 유사한 기술을 사용하여 이러한 패키지를 구성합니다.

또한 Cloud Storage 버킷의 이미지를 참조하도록 웹 서버를 구성합니다.

목표
이 실습에서는 다음 작업을 수행하는 방법을 알아봅니다.

Cloud Storage 버킷을 만들고 이미지를 배치

Cloud SQL 인스턴스를 만들고 구성

웹 서버에서 Cloud SQL 인스턴스에 연결

웹페이지에서 Cloud Storage 버킷의 이미지를 사용

작업 1: Google Cloud Platform(GCP) Console에 로그인하기
각 실습에서는 지정된 시간 동안 새 GCP 프로젝트와 리소스 집합이 무료로 제공됩니다.

시크릿 창을 사용하여 Qwiklabs에 로그인합니다.

실습 사용 가능 시간(예: img/time.png)을 참고하여 해당 시간 내에 완료합니다.

일시중지 기능은 없습니다. 필요한 경우 다시 시작할 수 있지만 처음부터 시작해야 합니다.

준비가 되면 img/start_lab.png 버튼을 클릭합니다.

실습 사용자 인증 정보를 확인하여 Cloud Platform Console에 로그인합니다. img/open_google_console.png

Google Console 열기를 클릭합니다.

다른 계정 사용을 클릭한 다음, 안내 메시지에 이 실습에 대한 사용자 인증 정보를 복사하여 붙여넣습니다.

다른 사용자 인증 정보를 사용하는 경우 오류가 발생하거나 요금이 부과됩니다.

약관에 동의하고 리소스 복구 페이지를 건너뜁니다.
실습을 완료했거나 다시 시작하려고 하는 경우가 아니면 실습 종료를 클릭하지 마세요. 클릭하면 작업이 지워지고 프로젝트가 삭제됩니다.

작업 2: 웹 서버 VM 인스턴스 배포하기
GCP Console의 탐색 메뉴(탐색 메뉴)에서 Compute Engine > VM 인스턴스를 클릭합니다.

인스턴스 만들기를 클릭합니다.

인스턴스 만들기 페이지에서 이름에 bloghost를 입력합니다.

리전과 영역에 Qwiklabs에서 할당한 리전과 영역을 선택합니다.

머신 유형은 기본값을 사용합니다.

부팅 디스크에 표시되는 이미지가 Debian GNU/Linux 9(stretch)가 아닌 경우 변경을 클릭하고 Debian GNU/Linux 9(stretch)를 선택합니다.

ID 및 API 액세스는 수정하지 않고 기본값을 그대로 유지합니다.

방화벽에서 HTTP 트래픽 허용을 클릭합니다.

네트워킹, 디스크, 보안, 관리, 단독 테넌시를 클릭하여 대화상자의 해당 섹션을 엽니다.

관리를 클릭하여 대화상자의 해당 섹션을 엽니다.

자동화 섹션까지 아래로 스크롤한 후 시작 스크립트 값에 다음 스크립트를 입력합니다.

apt-get update
apt-get install apache2 php php-mysql -y
service apache2 restart
복사되었습니다.
이 스크립트를 시작 스크립트 필드의 값으로 사용해야 합니다. 실수로 다른 필드에 입력하면 VM 인스턴스가 시작될 때 실행이 되지 않습니다.

나머지 설정은 기본값으로 두고 만들기를 클릭합니다.
인스턴스를 실행하고 완전히 사용할 수 있게 되려면 2분 정도 걸릴 수 있습니다.

실습 후반부에서 사용하기 위해 VM 인스턴스 페이지에서 bloghost VM 인스턴스의 내부 및 외부 IP 주소를 텍스트 편집기에 복사합니다.
내 진행 상황 확인하기를 클릭하여 목표를 확인합니다.
웹 서버 VM 인스턴스 배포하기

작업 3: gsutil 명령줄을 사용하여 Cloud Storage 버킷 만들기
Cloud Storage 버킷 이름은 전역적으로 고유한 이름으로 지정합니다. 버킷 이름의 중복을 피하기 위해 여기에서는 전역적으로 고유한 Cloud Platform 프로젝트 ID와 동일한 이름을 지정하도록 안내합니다.

Cloud Storage 버킷은 단일 리전 또는 멀티 리전 위치(미국, EU 또는 아시아)와 연결할 수 있습니다. 여기에서는 버킷을 Qwiklabs 또는 강사가 할당한 리전 및 영역에 가장 가까운 멀티 리전과 연결합니다.

Google Cloud Platform 메뉴에서 Cloud Shell 활성화Cloud Shell 활성화를 클릭합니다. 대화상자가 표시되면 계속을 클릭합니다.

편의상 LOCATION이라는 환경 변수에 선택한 위치를 입력하세요. 다음 명령어 중 하나를 입력하세요.

export LOCATION=US
복사되었습니다.
또는

export LOCATION=EU
복사되었습니다.
또는

export LOCATION=ASIA
복사되었습니다.
Cloud Shell에서는 DEVSHELL_PROJECT_ID 환경 변수에 프로젝트 ID가 포함됩니다. 버킷을 만들고 이름을 프로젝트 ID로 지정하려면 다음 명령어를 입력하세요.

gsutil mb -l $LOCATION gs://$DEVSHELL_PROJECT_ID
복사되었습니다.
메시지가 표시되면 승인을 클릭하여 계속합니다.

공개적으로 액세스 가능한 Cloud Storage 위치에서 배너 이미지를 검색합니다.

gsutil cp gs://cloud-training/gcpfci/my-excellent-blog.png my-excellent-blog.png
복사되었습니다.
새로 만든 Cloud Storage 버킷에 배너 이미지를 복사합니다.

gsutil cp my-excellent-blog.png gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png
복사되었습니다.
방금 만든 객체의 액세스 제어 목록(ACL)을 수정하여 누구든지 공개적으로 읽을 수 있도록 합니다.

gsutil acl ch -u allUsers:R gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png
복사되었습니다.
내 진행 상황 확인하기를 클릭하여 목표를 확인합니다.
gsutil 명령줄을 사용하여 Cloud Storage 버킷 만들기

작업 4: Cloud SQL 인스턴스 만들기
GCP Console의 탐색 메뉴(탐색 메뉴)에서 SQL을 클릭합니다.

인스턴스 만들기를 클릭합니다.

데이터베이스 엔진 선택에서 MySQL을 선택합니다.

인스턴스 ID에는 blog-db를 입력하고 루트 비밀번호에는 원하는 비밀번호를 입력합니다.

기억하기 쉬운 비밀번호를 선택하세요. 연결 메커니즘 상 모든 사용자에게 액세스 권한이 부여되지 않으므로 비밀번호를 어렵게 만들 필요가 없습니다.

단일 영역을 선택하고 Qwiklabs에서 할당한 리전 및 영역을 설정합니다.
bloghost 인스턴스를 시작한 것과 동일한 리전 및 영역이며, 클라이언트와 데이터베이스를 서로 가깝게 배치하면 최상의 성능을 얻을 수 있습니다.

인스턴스 만들기를 클릭합니다.
배포가 완료될 때까지 기다립니다. 몇 분 정도 걸릴 수 있습니다.

인스턴스 이름(blog-db)을 클릭하여 세부정보 페이지를 엽니다.

SQL 인스턴스 세부정보 페이지에서 SQL 인스턴스의 공개 IP 주소를 이 실습의 뒷부분에서 사용할 수 있도록 텍스트 편집기로 복사합니다.

왼쪽에 있는 사용자 메뉴를 클릭한 다음 사용자 계정 추가를 클릭합니다.

사용자 이름에 blogdbuser를 입력합니다.

비밀번호에 원하는 비밀번호를 입력하고 따로 적어둡니다.

추가를 클릭하여 데이터베이스에 사용자 계정을 추가합니다.

사용자가 생성될 때까지 기다립니다.

연결 탭을 클릭한 다음 네트워크 추가를 클릭합니다.
비공개 IP 연결과 공개 IP 연결 중에서 선택할 수 있는 경우 이 실습에서는 공개 IP를 선택합니다. 비공개 IP 기능은 이 실습을 제작하던 시점 기준으로 베타 버전입니다.

사용자 계정 생성이 아직 완료되지 않은 경우 네트워크 추가 버튼이 비활성화될 수 있습니다.

이름에 web front end를 입력합니다.

네트워크에 bloghost VM 인스턴스의 외부 IP 주소와 /32를 차례로 입력하면

결과가 다음과 같이 표시됩니다.

35.192.208.2/32
복사되었습니다.
VM 인스턴스의 외부 IP 주소 뒤에 /32를 사용해야 합니다. VM 인스턴스의 내부 IP 주소를 사용하지 마세요. 여기에 표시된 샘플 IP 주소를 사용하지 마세요.

완료를 클릭하여 승인된 네트워크 정의를 마칩니다.

저장을 클릭하여 구성 변경사항을 저장합니다.

참고: 다른 작업이 진행 중입니다와 같은 메시지가 표시되는 경우 blog-db에 녹색 체크표시가 나타날 때까지 몇 분 정도 기다렸다가 구성을 저장합니다.
내 진행 상황 확인하기를 클릭하여 목표를 확인합니다.
Cloud SQL 인스턴스 만들기

작업 5: Cloud SQL을 사용하도록 Compute Engine 인스턴스의 애플리케이션 구성하기
탐색 메뉴(탐색 메뉴)에서 Compute Engine > VM 인스턴스를 클릭합니다.

VM 인스턴스 목록에서 VM 인스턴스 bloghost 행의 SSH를 클릭합니다.

bloghost의 SSH 세션에서 작업 디렉터리를 서버의 문서 루트로 변경합니다.

cd /var/www/html
복사되었습니다.
nano 텍스트 편집기에서 index.php라는 파일을 수정합니다.

sudo nano index.php
복사되었습니다.
아래 콘텐츠를 파일에 붙여넣습니다.

<html>
<head><title>Welcome to my excellent blog</title></head>
<body>
<h1>Welcome to my excellent blog</h1>
<?php
 $dbserver = "CLOUDSQLIP";
$dbuser = "blogdbuser";
$dbpassword = "DBPASSWORD";
// In a production blog, we would not store the MySQL
// password in the document root. Instead, we would store it in a
// configuration file elsewhere on the web server VM instance.
$conn = new mysqli($dbserver, $dbuser, $dbpassword);
if (mysqli_connect_error()) {
        echo ("Database connection failed: " . mysqli_connect_error());
} else {
        echo ("Database connection succeeded.");
}
?>
</body></html>
복사되었습니다.
이후 단계에서 Cloud SQL 인스턴스의 IP 주소와 데이터베이스 비밀번호를 이 파일에 삽입합니다. 지금은 파일을 수정하지 않은 상태로 둡니다.

Ctrl+O 키를 누른 다음 Enter 키를 눌러 수정한 파일을 저장합니다.

Ctrl+X 키를 눌러 nano 텍스트 편집기를 종료합니다.

웹 서버를 다시 시작합니다.

sudo service apache2 restart
복사되었습니다.
새 웹브라우저 탭을 열고 bloghost VM 인스턴스의 외부 IP 주소와 /index.php를 차례로 주소 표시줄에 붙여넣으면 URL이 다음과 같이 표시됩니다.

35.192.208.2/index.php
복사되었습니다.
VM 인스턴스의 외부 IP 주소 뒤에 /index.php를 사용해야 합니다. VM 인스턴스의 내부 IP 주소를 사용하지 마세요. 여기에 표시된 샘플 IP 주소를 사용하지 마세요.

페이지를 로드하면 콘텐츠에 다음 구문으로 시작하는 오류 메시지가 포함되어 있음을 확인할 수 있습니다.

Database connection failed: ...
복사되었습니다.
이 메시지는 Cloud SQL 인스턴스에 대한 PHP 연결 구성이 완료되지 않았을 때 표시됩니다.

bloghost의 ssh 세션으로 돌아갑니다. nano 텍스트 편집기를 사용하여 index.php를 다시 수정합니다.

sudo nano index.php
복사되었습니다.
nano 텍스트 편집기에서 CLOUDSQLIP를 위에서 언급한 Cloud SQL 인스턴스 공개 IP 주소로 변경합니다. 값 앞뒤에 있는 따옴표는 그대로 두세요.

nano 텍스트 편집기에서 DBPASSWORD를 위에서 정의한 Cloud SQL 데이터베이스 비밀번호로 변경합니다. 값 앞뒤에 있는 따옴표는 그대로 두세요.

Ctrl+O 키를 누른 다음 Enter 키를 눌러 수정한 파일을 저장합니다.

Ctrl+X 키를 눌러 nano 텍스트 편집기를 종료합니다.

웹 서버를 다시 시작합니다.

sudo service apache2 restart
복사되었습니다.
bloghost VM 인스턴스의 외부 IP 주소를 연 웹브라우저 탭으로 돌아갑니다. 페이지를 로드하면 다음 메시지가 표시됩니다.

Database connection succeeded.
복사되었습니다.
실제 블로그에서 데이터베이스 연결 상태는 블로그 방문자에게 표시되지 않으며, 데이터베이스 연결은 관리자만 관리 권한을 갖습니다.

작업 6: Cloud Storage 객체를 사용하도록 Compute Engine 인스턴스의 애플리케이션 구성하기
GCP Console에서 Cloud Storage > 브라우저를 클릭합니다.

GCP 프로젝트와 동일한 이름이 지정된 버킷을 클릭합니다.

이 버킷에는 my-excellent-blog.png라고 하는 객체가 있습니다. 해당 객체의 공개 액세스 열에 표시되는 링크 아이콘 뒤의 URL, 또는 '공개 링크'라는 용어가 표시되면 해당 용어 뒤의 URL을 복사합니다.

링크 아이콘과 '공개 링크' 중 어느 것도 표시되지 않으면 브라우저를 새로고침하세요. 그래도 링크 아이콘이 표시되지 않으면 Cloud Shell로 돌아간 다음 해당 객체의 액세스 제어 목록(ACL)이 gsutil acl ch 명령어를 사용하여 변경되었음을 확인합니다.

bloghost VM 인스턴스의 ssh 세션으로 돌아갑니다.

다음 명령어를 입력하여 작업 디렉터리를 웹 서버의 문서 루트로 설정합니다.

cd /var/www/html
복사되었습니다.
nano 텍스트 편집기를 사용하여 index.php를 편집합니다.

sudo nano index.php
복사되었습니다.
화살표 키를 사용하여 커서를 h1 요소가 포함된 줄로 이동합니다. Enter 키를 눌러 새 빈 화면 줄을 연 다음 이전에 복사해 둔 URL을 줄에 붙여넣습니다.

URL 바로 앞에 다음 HTML 마크업을 붙여넣습니다.

<img src='
복사되었습니다.
URL의 끝에 닫는 작은따옴표와 닫는 화살괄호를 입력합니다.

'>
복사되었습니다.
그러면 줄이 다음과 같이 표시됩니다.

<img src='https://storage.googleapis.com/qwiklabs-gcp-0005e186fa559a09/my-excellent-blog.png'>
복사되었습니다.
이 단계의 효과는 <img src='...'>를 포함하는 줄을 <h1>...</h1>를 포함하는 줄 바로 앞에 배치하는 것입니다.

여기 표시된 URL을 복사하지 마세요. 대신 사용자의 Cloud Platform 프로젝트에서 Storage 브라우저에 표시된 URL을 복사합니다.

Ctrl+O 키를 누른 다음 Enter 키를 눌러 수정한 파일을 저장합니다.

Ctrl+X 키를 눌러 nano 텍스트 편집기를 종료합니다.

웹 서버를 다시 시작합니다.

sudo service apache2 restart
복사되었습니다.
bloghost VM 인스턴스의 외부 IP 주소를 연 웹브라우저 탭으로 돌아갑니다. 페이지를 로드하면 이제 해당 콘텐츠에 배너 이미지가 포함됩니다.

수고하셨습니다.
이 실습에서는 Cloud SQL 인스턴스를 구성하고 Compute Engine 인스턴스 애플리케이션을 연결했으며 Cloud Storage 버킷으로도 작업을 수행했습니다.

실습 종료하기
실습을 완료하면 실습 종료를 클릭합니다. Google Cloud Skills Boost에서 사용된 리소스를 자동으로 삭제하고 계정을 지웁니다.

실습 경험을 평가할 수 있습니다. 해당하는 별표 수를 선택하고 의견을 입력한 후 제출을 클릭합니다.

별점의 의미는 다음과 같습니다.

별표 1개 = 매우 불만족
별표 2개 = 불만족
별표 3개 = 중간
별표 4개 = 만족
별표 5개 = 매우 만족
의견을 제공하고 싶지 않다면 대화상자를 닫으면 됩니다.

의견이나 제안 또는 수정할 사항이 있다면 지원 탭을 사용하세요.

Copyright 2021 Google LLC All rights reserved. Google 및 Google 로고는 Google LLC의 상표입니다. 기타 모든 회사명 및 제품명은 해당 업체의 상표일 수 있습니다.

추가 리소스
Cloud SQL에 관한 Google Cloud Platform 문서 읽어보기

Cloud Storage에 관한 Google Cloud Platform 문서 읽어보기

827b33e18db55754.png
